.util-mix-sizing(@breakpoint:"base") {
  .setInfix(@bp) when (@bp = "base") {
    @infix: ~"";
    .display-sizing-width(@infix);
    .display-sizing-max-width(@infix);
    .display-sizing-height(@infix);
    .display-sizing-max-height(@infix);
  }

  .setInfix(@bp) when (default()) {
    @infix: ~"-@{breakpoint}";

    .display-sizing-width(@infix);
    .display-sizing-max-width(@infix);
    .display-sizing-height(@infix);
    .display-sizing-max-height(@infix);
  }

  .setInfix(@breakpoint);
}

.display-sizing-width(@infix) {
  each(@sizes, {
    .w@{infix}-@{key} {
      width: @value !important;
    }
  });
}

.display-sizing-max-width(@infix) {
  each(@sizes, {
    .mw@{infix}-@{key} {
      max-width: @value !important;
    }
  });
}

.display-sizing-height(@infix) {
  each(@sizes, {
    .h@{infix}-@{key} {
      height: @value !important;
    }
  });
}

.display-sizing-max-height(@infix) {
  each(@sizes, {
    .mh@{infix}-@{key} {
      height: @value !important;
    }
  });
}

// Generate base mobile classes
// .util-mix-sizing();

// Generate breakpoint-specific classes
each(@breakpoints, {
    @media (min-width: @value) {
        .util-mix-sizing(@key);
    }
});